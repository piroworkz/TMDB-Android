[versions]
#android
agp = "8.3.2"
biometric = "1.2.0-alpha05"
datastoreCore = "1.1.1"
kotlin = "1.9.23"
kotlin-coroutines = "1.8.0"
coreKtx = "1.13.1"
kotlinxSerializationJson = "1.6.3"
lifecycleRuntimeKtx = "2.8.2"
#compose
composeBom = "2024.06.00"
compose-navigation = "2.8.0-beta04"
compose-constraint-layout = "1.0.1"
activityCompose = "1.9.0"
navigation = "2.7.7"
coil-compose = "2.6.0"
composeAndroidPermissions = "1.0.0"
#other
playServicesLocation = "21.3.0"
retrofit = "2.11.0"
kotlin-converter = "1.0.0"
okhttp = "4.12.0"
arrow = "1.2.1"
#paging
pagingCompose = "3.3.0"
pagingRuntime = "3.3.0"
#protobuf
protobufJavalite = "4.26.0"
protobufKotlinLite = "4.26.0"
protobuf = "0.9.4"
jetbrainsKotlinJvm = "1.9.23"
#hilt
hilt = "2.51.1"
hiltNavigationCompose = "1.2.0"
hiltWork = "1.2.0"
javaxInject = "1"
#annotation processor
kapt = "1.9.23"
appcompat = "1.7.0"
material = "1.12.0"
fragmentKtx = "1.8.0"
#testing
junit = "4.13.2"
mock_K = "1.13.11"
junitVersion = "1.1.5"
espressoCore = "3.5.1"

[libraries]
composeAndroidPermissions = { module = "com.piroworkz:compose-android-permissions", version.ref = "composeAndroidPermissions" }
coreKtx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
datastoreCore = { module = "androidx.datastore:datastore-core", version.ref = "datastoreCore" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
lifecycleRuntimeKtx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
navigation = { group = "androidx.navigation", name = "navigation-common-ktx", version.ref = "navigation" }
fragmentKtx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragmentKtx" }
#compose
composeBom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
composeUi = { group = "androidx.compose.ui", name = "ui" }
composeUiGraphics = { group = "androidx.compose.ui", name = "ui-graphics" }
composeUiTooling = { group = "androidx.compose.ui", name = "ui-tooling" }
composeUiToolingPreview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
composeMaterial3 = { group = "androidx.compose.material3", name = "material3" }
composeActivity = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
composeNavigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "compose-navigation" }
composeConstraintLayout = { group = "androidx.constraintlayout", name = "constraintlayout-compose", version.ref = "compose-constraint-layout" }
coilCompose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil-compose" }
iconsExtended = { group = "androidx.compose.material", name = "material-icons-extended" }
#kotlin coroutines
kotlinCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
#retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
kotlinConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "kotlin-converter" }
#protobuf
protobufJavalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobufJavalite" }
protobufKotlinLite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobufKotlinLite" }
#okhttp
okhttpClient = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
arrowCore = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
#Paging
pagingCompose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
pagingRuntime = { module = "androidx.paging:paging-runtime", version.ref = "pagingRuntime" }
#android components
playServicesLocation = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
#hilt
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
javaxInject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

#testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
extJunit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espressoCore = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
mock_K = { group = "io.mockk", name = "mockk", version.ref = "mock_K" }

#build logic dependencies
androidGradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
protobufPlugin = { id = "com.google.protobuf", version.ref = "protobuf" }
hiltPlugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kapt" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
#Convention plugins
frameworkModuleConventionPlugin = { id = "architectcoders2024.framework.module.plugin", version = "unspecified" }
uiModuleConventionPlugin = { id = "architectcoders2024.ui.module.plugin", version = "unspecified" }
architectCodersAndroidApplication = { id = "architectcoders2024.android.application", version = "unspecified" }
androidLibraryConventionPlugin = { id = "architectcoders2024.android.library.plugin", version = "unspecified" }
